name: 'Find and install OpenVINO Python wheels'
description: 'Finds the OpenVINO Python wheels (core, dev and tokenizers) suitable for the "python3" executable and installs them'
inputs:
  wheels-dir-path:
    description: 'Path to the directory in which wheels are located'
    required: true
  install-core-wheel:
    description: 'Whether to install the OpenVINO Core wheel (openvino-*.whl)'
    required: true
  install-tokenizers-wheel:
    description: 'Whether to install the OpenVINO Dev wheel (openvino_tokenizes*.whl)'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Install OpenVINO Python wheels (Windows)
      shell: pwsh
      if: runner.os == 'Windows'
      run: |
        if ( "${{ inputs.install-core-wheel }}" -eq "true" )
        {
            $pyVersion = python3 -c "import sys; print(f'{sys.version_info.major}{sys.version_info.minor}')"
            $ovCoreWheelPath = Get-ChildItem -Path ${{ inputs.wheels-dir-path }} -Filter "openvino-*cp$pyVersion*.whl" | % { $_.FullName }
            python3 -m pip install $ovCoreWheelPath
        }
        
        if ( "${{ inputs.install-tokenizers-wheel }}" -eq "true" )
        {
            $ovTokenizersWheelPath = Get-ChildItem -Path ${{ inputs.wheels-dir-path }} -Filter openvino_tokenizers-*.whl | % { $_.FullName }
            python3 -m pip install "$ovTokenizersWheelPath"
        }
    - name: Install OpenVINO Python wheels (Linux and macOS)
      shell: bash
      if: runner.os != 'Windows'
      run: |
        if [[ "${{ inputs.install-core-wheel }}" == "true" ]]; then
          py_version=$(python3 -c "import sys; print(f'{sys.version_info.major}{sys.version_info.minor}')")
          ov_wheel_path=$(find ${{ inputs.wheels-dir-path }} -name "openvino-*cp$py_version*.whl")
          python3 -m pip install $ov_wheel_path
        fi
        
        if [[ "${{ inputs.install-tokenizers-wheel }}" == "true" ]]; then
          python3 -m pip install ${{ inputs.wheels-dir-path }}/openvino_tokenizers-*.whl
        fi
