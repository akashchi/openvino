name: Linux ONNX Runtime (Ubuntu 20.04)
on:
  workflow_dispatch:
#  pull_request:
#    paths-ignore:
#      - '**/docs/**'
#      - 'docs/**'
#      - '**/**.md'
#      - '**.md'
#      - '**/layer_tests_summary/**'
#      - '**/conformance/**'
#  push:
#    paths-ignore:
#      - '**/docs/**'
#      - 'docs/**'
#      - '**/**.md'
#      - '**.md'
#      - '**/layer_tests_summary/**'
#      - '**/conformance/**'
#    branches:
#      - master
#      - 'releases/**'

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-linux-onnxruntime
  cancel-in-progress: true

jobs:
  Build:
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-16-cores
    container:
      image: openvinogithubactions.azurecr.io/dockerhub/ubuntu:20.04
      volumes:
        - /mount/caches:/mount/caches
    env:
      DEBIAN_FRONTEND: noninteractive # to prevent apt-get from waiting user input
      CMAKE_BUILD_TYPE: 'Release'
      CMAKE_GENERATOR: 'Ninja Multi-Config'
      CMAKE_CXX_COMPILER_LAUNCHER: ccache
      CMAKE_C_COMPILER_LAUNCHER: ccache
      OPENVINO_REPO: /__w/openvino/openvino/openvino
      INSTALL_DIR: /__w/openvino/openvino/openvino_install
      BUILD_DIR: /__w/openvino/openvino/openvino_build
      CCACHE_DIR: /mount/caches/ccache/ubuntu20_x86_64_Release
      CCACHE_TEMPDIR: /__w/openvino/openvino/ccache_temp
      CCACHE_MAXSIZE: 50G
      ONNX_RUNTIME_REPO: /__w/openvino/openvino/onnxruntime
      ONNX_RUNTIME_UTILS: /__w/openvino/openvino/openvino/.ci/azure/ci_utils/onnxruntime
      ONNX_RUNTIME_BUILD_DIR: /__w/openvino/openvino/onnxruntime/build
    steps:

      - name: Install git
        run: |
          apt-get update
          apt-get install --assume-yes --no-install-recommends git ca-certificates

      - name: Clone OpenVINO
        uses: actions/checkout@v4
        with:
          path: ${{ env.OPENVINO_REPO }}
          submodules: 'true'

      - name: Clone ONNX Runtime
        run: |
          branch=`tr -s '\n ' < ${ONNX_RUNTIME_UTILS}/version`
          git clone --branch $branch --single-branch --recursive https://github.com/microsoft/onnxruntime.git ${ONNX_RUNTIME_REPO}

      #
      # Dependencies
      #

      - name: Install build dependencies
        run: |
          bash ${OPENVINO_REPO}/install_build_dependencies.sh

      #
      # Build
      #

      - name: CMake configure
        run: |
          cmake \
            -G "${{ env.CMAKE_GENERATOR }}" \
            -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
            -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF \
            -DENABLE_INTEL_GNA=OFF \
            -DENABLE_INTEL_GPU=OFF \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_PROFILING_ITT=OFF \
            -DENABLE_SAMPLES=OFF \
            -DENABLE_OV_TF_FRONTEND=OFF \
            -DENABLE_OV_TF_LITE=OFF \
            -DENABLE_OV_PADDLE_FRONTEND=OFF \
            -DENABLE_OV_PYTORCH_FRONTEND=OFF \
            -S ${OPENVINO_REPO} \
            -B ${BUILD_DIR}

      - name: Build
        run: cmake --build ${BUILD_DIR} --parallel --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: Show ccache stats
        run: ccache --show-stats

      - name: Install OpenVINO
        run: cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -P ${BUILD_DIR}/cmake_install.cmake

      - name: Build Lin ONNX Runtime
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          
          ${ONNX_RUNTIME_REPO}/build.sh \
            --config RelWithDebInfo \
            --use_openvino CPU_FP32 \
            --build_shared_lib \
            --parallel \
            --skip_tests \
            --compile_no_warning_as_error \
            --build_dir ${ONNX_RUNTIME_BUILD_DIR}
        env:
          CXXFLAGS: "-Wno-error=deprecated-declarations"

      - name: Run onnxruntime_test_all
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          skip_tests=$(tr -s '\n ' ':' < ${ONNX_RUNTIME_UTILS}/skip_tests)
          ./onnxruntime_test_all --gtest_filter=-$skip_tests
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_shared_lib_test
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          ./onnxruntime_shared_lib_test --gtest_filter=-CApiTest.test_custom_op_openvino_wrapper_library
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_global_thread_pools_test
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          ./onnxruntime_global_thread_pools_test
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_api_tests_without_env
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          ./onnxruntime_api_tests_without_env
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run pytorch-converted tests
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          ./onnx_test_runner "${ONNX_RUNTIME_REPO}/cmake/external/onnx/onnx/backend/test/data/pytorch-converted"
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run pytorch-operator tests
        run: |
          source ${INSTALL_DIR}/setupvars.sh
          ./onnx_test_runner "${ONNX_RUNTIME_REPO}/cmake/external/onnx/onnx/backend/test/data/pytorch-operator"
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo
