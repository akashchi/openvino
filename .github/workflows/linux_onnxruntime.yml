name: Linux ONNX Runtime (Ubuntu 20.04, Python 3.11)
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**/docs/**'
      - 'docs/**'
      - '**/**.md'
      - '**.md'
      - '**/layer_tests_summary/**'
      - '**/conformance/**'
  push:
    paths-ignore:
      - '**/docs/**'
      - 'docs/**'
      - '**/**.md'
      - '**.md'
      - '**/layer_tests_summary/**'
      - '**/conformance/**'
    branches:
      - master

concurrency:
  group: ${{ github.head_ref || github.run_id }}-linux-onnx-runtime
  cancel-in-progress: true

jobs:
  Build:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-20.04-8-cores
    env:
      CMAKE_BUILD_TYPE: 'Release'
      CMAKE_GENERATOR: 'Ninja'
      CMAKE_CXX_COMPILER_LAUNCHER: ccache
      CMAKE_C_COMPILER_LAUNCHER: ccache
      CMAKE_CXX_LINKER_LAUNCHER: ccache
      CMAKE_C_LINKER_LAUNCHER: ccache
      BUILD_TYPE: Release
      OPENVINO_REPO: ${{ github.workspace }}/openvino
      ONNX_RUNTIME_REPO: ${{ github.workspace }}/onnxruntime
      ONNX_RUNTIME_UTILS: ${{ github.workspace }}/openvino/.ci/azure/ci_utils/onnxruntime
      ONNX_RUNTIME_BUILD_DIR: ${{ github.workspace }}/onnxruntime/build
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_DIR: ${{ github.workspace }}/install/openvino
      DATA_PATH: ${{ github.workspace }}/testdata
      MODELS_PATH: ${{ github.workspace }}/testdata
      OV_TEMP: ${{ github.workspace }}/openvino_temp
      PYTHON_STATIC_ARGS: -m "not dynamic_library and not template_plugin"
    steps:
      - name: Clone OpenVINO
        uses: actions/checkout@v3
        with:
          path: 'openvino'
          submodules: 'recursive'

      - name: Clone ONNX Runtime
        run: |
          branch=`tr -s '\n ' < ${{ env.ONNX_RUNTIME_UTILS }}/version`
          git clone --branch $branch --single-branch --recursive https://github.com/microsoft/onnxruntime.git ${{ env.ONNX_RUNTIME_REPO }}

      - name: Create Directories
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          mkdir -p ${{ env.INSTALL_DIR }}

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      #
      # Dependencies
      #

      - name: Install build dependencies
        run: |
          sudo -E ${{ env.OPENVINO_REPO }}/install_build_dependencies.sh
          
          # Speed up build
          sudo apt -y --no-install-recommends install unzip
          wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
          unzip ninja-linux.zip
          sudo cp -v ninja /usr/local/bin/

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: "2000M"
          # Should save cache only if run in the master branch of the base repo
          # github.ref_name is 'ref/PR_#' in case of the PR, and 'branch_name' when executed on push
          save: ${{ github.ref_name == 'master' && 'true' || 'false'  }}
          verbose: 2
          key: ${{ github.job }}-linux-onnx-runtime
          restore-keys: |
            ${{ github.job }}-linux-onnx-runtime

      - name: Get tools versions
        run: |
          ninja --version || exit 1
          ccache --version || exit 1
          python3 --version || exit 1
          cmake --version || exit 1

      #
      # Build
      #

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: CMake configure
        run: |
          cmake \
            -GNinja \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF \
            -DENABLE_INTEL_GNA=OFF \
            -DENABLE_INTEL_GPU=OFF \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_PROFILING_ITT=OFF \
            -DENABLE_SAMPLES=OFF \
            -DENABLE_OV_TF_FRONTEND=OFF \
            -DENABLE_OV_PADDLE_FRONTEND=OFF \
            -DENABLE_OV_PYTORCH_FRONTEND=OFF \
            -DENABLE_OPENVINO_DEBUG=OFF \
            -S ${{ env.OPENVINO_REPO }} \
            -B ${{ env.BUILD_DIR }}

      - name: Clean ccache stats
        run: ccache --zero-stats --show-config

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --parallel ${{ steps.cpu-cores.outputs.count }} --config ${{ env.BUILD_TYPE }}

      - name: Show ccache stats
        run: ccache --show-stats

      - name: Install OpenVINO
        run: cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -P ${{ env.BUILD_DIR }}/cmake_install.cmake

      - name: Build Lin ONNX Runtime
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          
          ${{ env.ONNX_RUNTIME_REPO }}/build.sh \
            --config RelWithDebInfo \
            --use_openvino CPU_FP32 \
            --build_shared_lib \
            --parallel \
            --skip_tests \
            --compile_no_warning_as_error \
            --build_dir ${{ env.ONNX_RUNTIME_BUILD_DIR }}
        env:
          CXXFLAGS: "-Wno-error=deprecated-declarations"

      - name: Run onnxruntime_test_all
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          skip_tests=$(tr -s '\n ' ':' < ${{ env.ONNX_RUNTIME_UTILS }}/skip_tests)
          ./onnxruntime_test_all --gtest_filter=-$skip_tests
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_shared_lib_test
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          ./onnxruntime_shared_lib_test --gtest_filter=-CApiTest.test_custom_op_openvino_wrapper_library
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_global_thread_pools_test
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          ./onnxruntime_global_thread_pools_test
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run onnxruntime_api_tests_without_env
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          ./onnxruntime_api_tests_without_env
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run pytorch-converted tests
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          ./onnx_test_runner "${{ env.ONNX_RUNTIME_REPO }}/cmake/external/onnx/onnx/backend/test/data/pytorch-converted"
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo

      - name: Run pytorch-operator tests
        run: |
          source ${{ env.INSTALL_DIR }}/setupvars.sh
          ./onnx_test_runner "${{ env.ONNX_RUNTIME_REPO }}/cmake/external/onnx/onnx/backend/test/data/pytorch-operator"
        working-directory: ${{ env.ONNX_RUNTIME_BUILD_DIR }}/RelWithDebInfo
