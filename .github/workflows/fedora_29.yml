name: Fedora 29 (RHEL 8.4), Python 3.8
on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      # - master
      - 'releases/**'

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-fedora-29
  cancel-in-progress: true

permissions: read-all

jobs:
  Smart_CI:
    runs-on: ubuntu-latest
    outputs:
      affected_components: "${{ steps.smart_ci.outputs.affected_components }}"
      changed_components: "${{ steps.smart_ci.outputs.changed_components }}"
      skip_workflow: "${{ steps.smart_ci.outputs.skip_workflow }}"
    steps:
      - name: checkout action
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          sparse-checkout: .github/actions/smart-ci

      - name: Get affected components
        id: smart_ci
        uses: ./.github/actions/smart-ci
        with:
          repository: ${{ github.repository }}
          pr: ${{ github.event.number }}
          commit_sha: ${{ github.sha }}
          ref_name: ${{ github.ref_name }}
          component_pattern: "category: (.*)"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          skip_when_only_listed_labels_set: 'docs'
          skip_when_only_listed_files_changed: '*.md,*.rst,*.png,*.jpg,*.svg,*/layer_tests_summary/*,*/conformance/*'

      - name: Show affected components
        run: |
          echo "${{ toJSON(steps.smart_ci.outputs.affected_components) }}"
        shell: bash

  Docker:
    needs: Smart_CI
    runs-on: aks-linux-4-cores-16gb-docker-build
    container:
      image: openvinogithubactions.azurecr.io/docker_build:0.2
      volumes:
        - /mount:/mount
    outputs:
      images: "${{ steps.handle_docker.outputs.images }}"
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/handle_docker
        id: handle_docker
        with:
          images: |
            ov_build/fedora_29
          registry: 'openvinogithubactions.azurecr.io'
          dockerfiles_root_dir: '.github/dockerfiles'
          changed_components: ${{ needs.smart_ci.outputs.changed_components }}

  Build:
    needs: [Docker, Smart_CI]
    if: "!needs.smart_ci.outputs.skip_workflow"
    uses: ./.github/workflows/job_build_linux.yml
    with:
      runner: 'aks-linux-16-cores-32gb'
      container: '{"image": "${{ fromJSON(needs.docker.outputs.images).ov_build.fedora_29 }}", "volumes": ["/mount:/mount"], "options": "-e SCCACHE_AZURE_BLOB_CONTAINER -e SCCACHE_AZURE_CONNECTION_STRING"}'
      affected-components: ${{ needs.smart_ci.outputs.affected_components }}
      event-name: ${{ github.event_name }}
      os: 'fedora_29'
      build-contrib: false
      build-debian-packages: false
      build-js: false
      build-rpm-packages: false
      cmake-options: |- 
            -G "Ninja" \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_NCC_STYLE=OFF \
            -DENABLE_TESTS=ON \
            -DENABLE_STRICT_DEPENDENCIES=OFF \
            -DENABLE_SYSTEM_OPENCL=ON \
            -DENABLE_PYTHON_PACKAGING=ON \
            -DCPACK_GENERATOR=TGZ \
            -DENABLE_INTEL_GPU=OFF \
            -DENABLE_INTEL_NPU=OFF \
            -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF \
            -DCMAKE_BUILD_TYPE=Release

  CXX_Unit_Tests:
    name: C++ unit tests
    needs: [Smart_CI, Docker, Build]
    timeout-minutes: 30
    runs-on: 'aks-linux-16-cores-32gb'
    container:
      image: ${{ fromJSON(needs.docker.outputs.images).ov_build.fedora_29 }}
    defaults:
      run:
        shell: 'bash'
    env:
      INSTALL_DIR: ${{ github.workspace }}/install
      INSTALL_TEST_DIR: ${{ github.workspace }}/install/tests
      SOURCE_COMMAND: 'source'
      SETUPVARS: 'setupvars.sh'
    steps:
      - name: Download OpenVINO package
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: openvino_package
          path: ${{ env.INSTALL_DIR }}

      - name: Download OpenVINO tests package
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: openvino_tests
          path: ${{ env.INSTALL_TEST_DIR }}

      # Needed as ${{ github.workspace }} is not working correctly when using Docker
      - name: Setup Variables (Unix)
        run: |
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/install" >> "$GITHUB_ENV"
          echo "INSTALL_TEST_DIR=$GITHUB_WORKSPACE/install/tests" >> "$GITHUB_ENV"
          echo "SETUPVARS_COMMAND=${{ env.SOURCE_COMMAND }} $GITHUB_WORKSPACE/install/${{ env.SETUPVARS }}" >> "$GITHUB_ENV"

      - name: Extract OpenVINO packages (Unix)
        run: |
          pushd $INSTALL_DIR
            tar -xzf openvino_package.tar.gz -C $INSTALL_DIR
          popd
          pushd $INSTALL_TEST_DIR
            tar -xzf openvino_tests.tar.gz -C $INSTALL_DIR
          popd

      #
      # Tests
      #

      - name: OpenVINO Core Unit Tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).Core.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_core_unit_tests --gtest_print_time=1 --gtest_filter=-*IE_GPU* --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-OVCoreUT.xml

      - name: OpenVINO Inference Functional Tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).inference.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_inference_functional_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-InferenceFunc.xml
      
      - name: OpenVINO Inference Unit Tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).inference.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_inference_unit_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-InferenceUnit.xml

      - name: Low Precision Transformations Tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).LP_transformations.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_lp_transformations_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-LpTransformations.xml

      - name: OpenVINO Conditional compilation tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).Core.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_conditional_compilation_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-ConditionalCompilation.xml

      - name: IR frontend tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).IR_FE.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_ir_frontend_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-IRFrontend.xml

      - name: Transformations func tests
        if: ${{ fromJSON(needs.smart_ci.outputs.affected_components).transformations.test && runner.arch != 'ARM64' }} # Ticket: 126281
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_transformations_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-Transformations.xml

      - name: CPU plugin unit tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).CPU.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_cpu_unit_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-CPUUnitTests.xml

      - name: ov_subgraphs_dumper_tests tests
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_subgraphs_dumper_tests --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-ov_subgraphs_dumper_tests.xml

      - name: Template OpImpl tests
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_op_conformance_tests --gtest_print_time=1 --device=TEMPLATE --gtest_filter=*OpImpl*--gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-OpImplTests.xml

      - name: OpenVINO C API tests
        if: fromJSON(needs.smart_ci.outputs.affected_components).C_API.test
        run: |
          ${{ env.SETUPVARS_COMMAND }}
          ${{ env.INSTALL_TEST_DIR }}/ov_capi_test --gtest_print_time=1 --gtest_output=xml:${{ env.INSTALL_TEST_DIR }}/TEST-OpenVINOCAPITests.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: ${{ !cancelled() }}
        with:
          name: test-results-cpp
          path: ${{ env.INSTALL_TEST_DIR }}/TEST*.xml
          if-no-files-found: 'warn'
  
  Overall_Status:
    name: ci/gha_overall_status_fedora_29
    needs: [Smart_CI, Build, CXX_Unit_Tests]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check status of all jobs
        if: >-
          ${{
            contains(needs.*.result, 'failure') ||
            contains(needs.*.result, 'cancelled')
          }}
        run: exit 1
